1. 프로그래밍 언어에서 관계형 데이터 베이스르르 사용하는 방법
    => DB제조 업체에서 제공하는 드라이버를 사용하거나 SQL Mapper Framwork를 사용하는 방식.
        -> SQL을 이용한다.
        -> 사용하기 쉬워서 SI 같은 많은 인력이 진행하는 프로젝트에서 주로 사용한다. 

    => ORM Framework 이용
        -> SQL을 이용하지 않고 객체지향 언어의 메서드를 이용해서 SQL을 자동 변환해서 수행하는 방식
        -> 사용하기 어려우나 성능이 우수하기 때문에 적은 인력을 가지고 만드는 솔루션 분야에서 많이 이용한다.

2. 데이터베이스 제공업체에서 제공하는 드라이버를 이용해서 SQL을 실행하는 방법
    => Node에서 MariaDB는 MySQL과 같은 DB로 취급한다.

3. MariaDB 연동준비
    => 필요한 모듈 : mysql
    => 필요한 정보
        -> 연결할 DB를 소유하고 있는 컴퓨터의 IP나 도메일, 포트번호 <localhost(127.0.0.1, ::1):3306>
        -> 외부 접속 허용시 localhost가 접속이 안될 수 도 있다, 그럴 때는 루프백(127.0.0.1)으로 접속 시도.(외부의 데이터만 받을 수 있다).
        
        -> 사용할 DB 이름(sid 라고 하기도 한다.)
            - adam DB 사용 (DBeaver 에서 use adam;) _ 꼭 해야하나?

        -> DB에 대한 계정(ID/PW) _ 무조건 필요하진 않다(SQL LITE - 핸드폰 켠 순간 로그인 되었다고 판단 _ OS 인증).

    => 연결(Nod File에서)
        // 모듈가져 오기
        const mariadb = require('mysql');

        // 접속정보 가져오기
        let connection = mariadb.createConnetion({
            host : 'IP나 도메인",
            port : '포트번호',
            user : '아이디',
            password : '비밀번호',
            database : 'DB이름'
        });

        // 연결
        connection.connect(function(error){
            if(error){
                에러가 발생했을 때 수행할 내용
            }
        });
        DB 연결이 되었을 때 수행할 내용

    => 연결확인
        - Node 프토젝트 생성
        - mysql 패키지 설치 npm install mysql
        - 이후 실행

        connection.connect(function(error){
            if(error){
                console.log(error);
            } else {
                console.log(connection);
            }
        });
        // connection이 출력되면 연결 성공